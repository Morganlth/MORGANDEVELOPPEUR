// #USES

@use 'sass:map';

@use '../global/colors' as *;
@use '../global/breakpoints' as *;

@use './position';
@use './size';
@use './media';

// #VARIABLES

    // --FONT-FAMILY
    $family-title: 'CodeNext-BLACK';
    $family-subtitle: 'CodeNext';
    $family-content: 'AnonymousPro';

    // --FONT-SIZE -> 0 - 12 - 18 - 24 - 36 - 48 - 60 - 72 - 88
    $font-sizes: (s0: 0rem, s1: 1.2rem, s2: 1.8rem, s3: 2.4rem, s4: 3.6rem, s5: 4.8rem, s6: 6rem, s7: 7.2rem, s8: 8.8rem);

    // --FONT-WEIGHT
    $content-font-weight: (w1: 100, w2: 900); // only 2 values

    // --LINE-HEIGHT
    $line-height-title-min: .71;

    // --FONT-TITLE
    $h-1: (color: $light, font-family: $family-title, font-size: var(--title-size, map.get($font-sizes, s6)), font-weight: 900, line-height: 1);
    $h-2: (color: $indicator, font-family: $family-title, font-size: var(--title-size, map.get($font-sizes, s5)), font-weight: 900, line-height: 1.2);
    $h-3: (color: $indicator, font-family: $family-title, font-size: map.get($font-sizes, s4), font-weight: 900, line-height: 1.2);
    $h-4: (color: $light, font-family: $family-title, font-size: map.get($font-sizes, s3), font-weight: 900, line-height: 1.2); 

    $titles: ('h-1': $h-1, 'h-2': $h-2, 'h-3': $h-3, 'h-4': $h-4);

// #FONT

    // --FONT-TITLE
    @mixin h-($number: 1) { @each $key, $value in map.get($titles, 'h-#{$number}') { #{$key}: $value; } } // set title properties

    @mixin h-custom($color: inherit, $font-size: map.get($font-sizes, s3), $line-height: $line-height-title-min)
    {
        color: $color;
        font: $font-size $family-title;
        line-height: $line-height;
        user-select: none;
    }

    // --FONT-INTERACT
    @mixin interact($color: inherit, $font-size: map.get($font-sizes, s2), $line-height: 1, $font-weight: map.get($content-font-weight, w2))
    {
        color: $color;
        font: $font-weight $font-size $family-content;
        line-height: $line-height;
        user-select: none;
    }

    // --FONT-ANIMATIONS
    @mixin simple-hover($color: $primary)
    {
        transition: color .27s;

        &:hover { color: $color; }
    }

    %selected
    {
        &::before
        {
            @include position.placement(absolute, 50%, 0, 0, 0, true);

            transform: translateX(-50%) scaleX(.05);

            width: 100%;
            height: 0;
            
            border-top: solid $light 1px;
        }

        position: relative;

        opacity: .9;

        transition: opacity .3s;

        &::after
        {
            @include position.placement(absolute, 50%, 0, 0, 0, true);

            transform: translateY(-50%) scale(1, 0);

            width: 100%;
            height: 3.4rem;

            border: solid $primary 1px;
            
            box-shadow: 0 0 5px $primary;
            box-sizing: border-box;
        }

        &.selected
        {
            &::before
            {
                border-top-color: $primary;

                animation: aSelected-before .3s ease-out;

                @keyframes aSelected-before { 100% { transform: scaleX(1); } }
            }

            opacity: 1;

            animation: aSelected .4s forwards;

            @keyframes aSelected
            {
                40% { color: $indicator; }
                100% { color: $primary; }    
            }

            &::after
            {
                animation: aSelected-after .2s linear .25s forwards;

                @keyframes aSelected-after { 100% { transform: translateY(-50%) scale(1); } }
            }
        }
    }

    // --FONT-MEDIAS
    %m-h-1
    {
        #{--title-size}: map.get($font-sizes, s6);
    
        @include media.min($ms2) { #{--title-size}: map.get($font-sizes, s7); }
        @include media.min($ms3, $ms3)
        {
            #{--title-size}: map.get($font-sizes, s8);

            line-height: .9 !important;
        }
    }